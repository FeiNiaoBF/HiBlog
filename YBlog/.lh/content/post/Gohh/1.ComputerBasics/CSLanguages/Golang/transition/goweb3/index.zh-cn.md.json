{
    "sourceFile": "content/post/Gohh/1.ComputerBasics/CSLanguages/Golang/transition/goweb3/index.zh-cn.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1718117718817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1718117858915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n ---\n-title: \"Go Web的学习1\"\n+title: \"Go Web的学习3\"\n date: 2024-06-11T22:45:30+08:00\n draft: false\n taps: ['web']\n categories: ['Golang', 'Web']\n@@ -9,4 +9,40 @@\n weight:\n math: false\n readingTime: true\n ---\n+\n+## 分组控制 （Group）\n+\n+说到 **GROUP** 我就想起来 MySQL 中的 SQL 语句  `GROUP BY`，他们本质上不一样但其实想做的事情就是分组，这里的分组是路由分组。\n+\n+### 意义-为什么需要分组\n+\n+分组是在 Web 框架中组织和管理路由的技术之一。比如当我有 `/hello/x` 、`/hello/y` 、`/hello/z` 三个不同的 pattern 时，我不想写三个不同的 handler 来处理（假设 handler 也是做相似的），你会发现他们的前缀路由相同，在这样的一种情况下，我需要复用 handler，你会想不如打包在一起组织起来一同管理。\n+这种技术它允许开发者将相关的路由分组在一起，以便更好地**组织代码**、**共享中间件**、**统一处理路径前缀**等。也可以提高代码的可读性、可维护性和可扩展性。\n+\n+### 更好的管理\n+\n+例如 `/hello` 是一个分组，`/hello/a` 和 `/hello/b` 可以是该分组下的**子分组 (Subgroup)**。作用在 `/hello` 分组上的中间件(middleware)，也都会作用在子分组，子分组还可以应用自己特有的中间件。\n+\n+🚧🚧🚧\n+\n+\n+## 中间件 （Middleware）\n+\n+中间件（Middleware）是一个**软件层**，是一些技术类组件的统称，它位于应用程序和底层服务（如操作系统、网络协议栈或数据库）之间，也允许用户自己定义功能，嵌入到框架服务中，提供通用服务。中间件的主要目的是简化应用程序开发，通过提供可重用的、跨应用程序的功能来减少开发工作量。\n+\n+中间件可以提供多种服务，包括但不限于：\n+1. **通信服务**：允许不同的应用程序或组件通过网络进行通信。\n+2. **数据管理**：提供数据存储、检索和管理的抽象层，如数据库中间件。\n+3. **消息传递**：支持异步消息传递，如消息队列或发布/订阅系统。\n+4. **事务处理**：确保分布式系统中的事务完整性和一致性。\n+5. **安全性**：提供认证、授权、加密和审计等安全功能。\n+6. **集成**：帮助不同的应用程序和系统集成，如企业服务总线（ESB）。\n+7. **应用服务器**：提供运行时环境和支持服务，如Java EE应用服务器。\n+8. **API网关**：作为微服务架构中的单一入口点，处理请求路由、组合和协议转换。\n+9. **缓存**：提供数据缓存服务以提高性能。\n+10. **日志和监控**：收集和分析应用程序的日志和性能数据。\n+\n+怎么使用中间件需要考虑2个比较关键的点：\n+- **插入点在哪合适**\n+- **中间件的参数**\n"
                },
                {
                    "date": 1718117868259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,14 +25,14 @@\n 例如 `/hello` 是一个分组，`/hello/a` 和 `/hello/b` 可以是该分组下的**子分组 (Subgroup)**。作用在 `/hello` 分组上的中间件(middleware)，也都会作用在子分组，子分组还可以应用自己特有的中间件。\n \n 🚧🚧🚧\n \n-\n ## 中间件 （Middleware）\n \n 中间件（Middleware）是一个**软件层**，是一些技术类组件的统称，它位于应用程序和底层服务（如操作系统、网络协议栈或数据库）之间，也允许用户自己定义功能，嵌入到框架服务中，提供通用服务。中间件的主要目的是简化应用程序开发，通过提供可重用的、跨应用程序的功能来减少开发工作量。\n \n 中间件可以提供多种服务，包括但不限于：\n+\n 1. **通信服务**：允许不同的应用程序或组件通过网络进行通信。\n 2. **数据管理**：提供数据存储、检索和管理的抽象层，如数据库中间件。\n 3. **消息传递**：支持异步消息传递，如消息队列或发布/订阅系统。\n 4. **事务处理**：确保分布式系统中的事务完整性和一致性。\n@@ -43,6 +43,7 @@\n 9. **缓存**：提供数据缓存服务以提高性能。\n 10. **日志和监控**：收集和分析应用程序的日志和性能数据。\n \n 怎么使用中间件需要考虑2个比较关键的点：\n+\n - **插入点在哪合适**\n - **中间件的参数**\n"
                },
                {
                    "date": 1718117873611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n ---\n title: \"Go Web的学习3\"\n date: 2024-06-11T22:45:30+08:00\n draft: false\n-taps: ['web']\n+taps: ['web', ]\n categories: ['Golang', 'Web']\n author: [\"Yeelight\"]\n showtoc: true\n weight:\n"
                },
                {
                    "date": 1718117879960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n ---\n title: \"Go Web的学习3\"\n date: 2024-06-11T22:45:30+08:00\n draft: false\n-taps: ['web', ]\n+taps: ['web', 'router', ]\n categories: ['Golang', 'Web']\n author: [\"Yeelight\"]\n showtoc: true\n weight:\n"
                },
                {
                    "date": 1718117885312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n ---\n title: \"Go Web的学习3\"\n date: 2024-06-11T22:45:30+08:00\n draft: false\n-taps: ['web', 'router', 'middleware']\n+taps: ['web', 'GROUP', 'middleware']\n categories: ['Golang', 'Web']\n author: [\"Yeelight\"]\n showtoc: true\n weight:\n"
                }
            ],
            "date": 1718117718817,
            "name": "Commit-0",
            "content": "---\ntitle: \"Go Web的学习1\"\ndate: 2024-06-11T22:45:30+08:00\ndraft: false\ntaps: ['web']\ncategories: ['Golang', 'Web']\nauthor: [\"Yeelight\"]\nshowtoc: true\nweight:\nmath: false\nreadingTime: true\n---\n"
        }
    ]
}